dnl -*- shell-script -*-
dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/galan/global.h)

dnl These three are required to make libtool work on MacOS X.
AC_CANONICAL_BUILD
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE(galan, 0.4.0pre)
AM_CONFIG_HEADER(config.h)

dnl Program checks
AC_PROG_CC
AM_PROG_CC_STDC
AC_PROG_CXX

dnl Libtool for libgalan.so and the plugin modules
AC_LIBTOOL_DLOPEN
dnl AM_DISABLE_STATIC
AM_PROG_LIBTOOL
AC_SUBST(LIBTOOL_DEPS)

dnl Library checks

dnl Header-file checks
AC_HEADER_STDC

dnl Checks for the optional plugins
dnl ===========================================================================

AC_SUBST(OPTIONAL_PLUGINS)
OPTIONAL_PLUGINS=

dnl AC_CHECK_HEADER(esd.h, OPTIONAL_PLUGINS="${OPTIONAL_PLUGINS} esd_output.la")
AC_CHECK_HEADER(sys/soundcard.h, OPTIONAL_PLUGINS="${OPTIONAL_PLUGINS} OssOutput.la")

# MacOS X audio hardware.
AC_CHECK_HEADER(CoreAudio/AudioHardware.h, OPTIONAL_PLUGINS="${OPTIONAL_PLUGINS} MacOutput.la")

dnl Feature tests
dnl ===========================================================================

AC_MSG_CHECKING(for \$QTDIR)
if test "x$QTDIR" = "x"; then
    AC_MSG_ERROR(\$QTDIR not set - please set it to where you installed Qt v2.x)
fi
AC_SUBST(QTDIR)
AC_MSG_RESULT($QTDIR)

LDFLAGS="$LDFLAGS -L$QTDIR/lib"
AC_CHECK_LIB(qt, main, QTLIBRARY="-lqt",
    AC_CHECK_LIB(qt-mt, main, QTLIBRARY="-lqt-mt",
	AC_MSG_ERROR(Could not determine which QTLIBRARY to use!)))
AC_SUBST(QTLIBRARY)
AC_MSG_NOTICE([Using $QTLIBRARY as QTLIBRARY.])

dnl AM_PATH_VORBIS

AM_PATH_GLIB(1.2.0, , AC_MSG_ERROR(Cannot find glib: is glib-config in path?), gmodule)

dnl Only use -Wall if we have gcc
AC_MSG_CHECKING(to see if we want to use GCC specific compiler flags)
if test "x$GCC" = "xyes"; then
  AC_MSG_RESULT([yes, we do])
  if test -z "`echo "$CFLAGS" | grep "\-Wall" 2> /dev/null`" ; then
    CFLAGS="$CFLAGS -Wall"
  fi
else
  AC_MSG_RESULT([no, we\'re not using GCC])
fi

AC_ARG_WITH([pkglib-dir],
    AC_HELP_STRING([--with-pkglib-dir],
	[Set the pkglib directory [[EPREFIX/lib/galan]]]),
    [PKGLIB_DIRECTORY=$withval],
    [PKGLIB_DIRECTORY=$libdir/galan])
AC_SUBST(PKGLIB_DIRECTORY)

AC_ARG_WITH([pkgdata-dir],
    AC_HELP_STRING([--with-pkgdata-dir],
	[Set the pkgdate directory [[PREFIX/share/galan]]]),
    [PKGDATA_DIRECTORY=$withval],
    [PKGDATA_DIRECTORY=$libdir/galan])
AC_SUBST(PKGDATA_DIRECTORY)

AC_ARG_WITH([galan-framework],
    AC_HELP_STRING([--with-galan-framework],
	[Post-installation MacOS X framework location]),
    [FRAMEWORK_DIRECTORY=$withval],
    [FRAMEWORK_DIRECTORY=no])
AC_SUBST(FRAMEWORK_DIRECTORY)
AM_CONDITIONAL(NoMacOSXFramework, test "$FRAMEWORK_DIRECTORY" = "no")

AC_ARG_WITH([documentation],
    AC_HELP_STRING([--with-documentation],
	[Build and install documentation [[no]]]),
    [want_documentation=$withval],
    [want_documentation=no])
AM_CONDITIONAL(WantDocumentation, test "$want_documentation" = "yes")

AC_OUTPUT(
    Makefile
    doc/Makefile
    doc/Info.plist
    doc/manual/galandoc.dtd
    doc/manual/Makefile
    src/Makefile
    src/galan/Makefile
    src/plugins/Makefile
    src/qtgalan/Makefile
    tests/Makefile
    galan.spec
    galan-config
)
